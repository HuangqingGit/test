Git说明 :版本控制软件，分布式版本控制软件

一.  安装Git

	Use git from git bash only..
	其他的全部默认下一步
	安装完成


二.  配置bin目录

          		1.首先查看系统环境变量配置：

	我的电脑右击属性—>高级系统设置—>环境变量—>系统变量—>
	双击Past—>Git安装时有没有为我们自动部署bin目录（如果以自动部署了bin目录就跳过此步骤）
	
		2.如果没有安装则手动部署一下：

	右键Git打开文件所在位置——>找到bin目录并复制路径——>按照以上查看方法打开Past变量——>
	——>新建变量——>把刚才的路径粘贴进去——>保存即可

（配置bin目录的目的是为了执行bin目录下的bash.exe、git.exe、sh.exe文件，这一步必不可少）


三.  配置本地用户名和邮箱

	桌面右键打开Git Bash Here  输入命令：
		git config --global user.name	"输入一个用户名"	（用户名可以随意，但必须是英文）
		git config --global user.email 	"输入一个邮箱"   	（可以使用其他邮箱，但建议使用Git注册邮箱）
	
	验证用户名和邮箱是否配置成功！
		我的电脑——>系统C盘——>用户——>自己电脑的名称用户——>找到.gitconfig，然后右键编辑或者其他编辑器打开查看
	这里如果已经能找到.gitconfig文件说明已经配置成功了打开查看只是验证配置是否正确（推荐编辑器Notepad++）


四.  配置远程仓库
 （这里可以选择自己搭建一个Git服务器，也可以选择托管网站，这里我们选择托管网站Github.com）
	1. 在Github网站注册用户然后建立Github代码库（注册和建库，自行百度，这里主要讲本地仓库和远程仓库的交互）
	2. 先在本地生成ssh：
	     本地生成一个ssh文件——>然后在发送一份到远程服务器（这里的发送实际是先生成然后粘贴过去）
	     桌面右键打开Git Bash Here  输入命令：ssh-keygen -t rsa -C 然后这里跟上刚刚配置的邮箱注意没有“”C必须大写
	     然后询问（yes/no）这里不用输入，一直按Enter直到看到一个虚线框框起来的乱码就表示成功了！
	3. 验证ssh是否成功
		跟验证本地用户名和邮箱的方法一样——>找到 .ssh这个文件夹——>里面有两个密钥
		" id_rsa " 和 " id_rsa.pub "文件，前者为私有的密钥，后者为公有的密钥，后者的密钥是需要发送到服务器端的密钥
		打开 " id_rsa.pub " 全选并复制

	4. 打开Github网站——>点击右上角头像——>点击setting——>在界面左边找到SSH and GPG keys——>new SSH key
	     Title：里面随便填（最好英文和数字）
	     Key：粘贴刚刚复制的密钥（这里要注意最后一行的回车要删除，不然有可能报错！）
	5. 测试远程仓库通讯
	     输入命令：ssh -T git@github.com
	     然后询问（yes/on）？这里我们输入yes	（看到输入一句access. 表示通讯成功！
	     或者查看刚才的.ssh的文件夹是否新增了一个known_hosts ,如果有则表示通讯成功！）
	如果失败：就多试几次，有时候Github远程仓库网络不稳定，或者检测刚刚的密钥是否正确!


以上是本地仓库和远程仓库的配置，接下来是本地推送到远程仓库，和从远程仓库抓取数据

本地仓库：

	1. 首先任意地方new一个文件夹——>然后在文件夹里打开Git Bash Here
	2. 初始化git项目，输入命令：
	       git init （如果文件夹显示了.git文件夹表示这个文件夹已经是git项目了）
	       如果没有可能是没有打开显示隐藏文件
	3. 建立远程项目（自行百度，然后找到远程仓库的唯一标识可以是 HTTPS 的 也可以是 SSH的）
	4. 与远程仓库关联，输入命令：
	       git remote add origin 这里跟上远程仓库的唯一标识 举个SSH的例子：git@github.com:yanqun/mygittremote.git
	       (在 ：以前的是固定写法 ：后面是你的用户名和仓库名等，不用手动输入，远程仓库可以复制)


配置主要命令：
  1.    git config --global user.name	（配置本地用户名）
  2.    git config --global user.email	（配置本地邮箱）
  3.    ssh-keygen -t rsa -C		（生成免密登录秘钥）
  4.    ssh -T git@github.com		（测试远程免密钥通讯）
  5.    git remote add origin		（关联远程仓库分支）

推送抓取命令：
  1.    git init 		初始化项目		（把当前文件夹初始化为.git项目文件夹）
  2.    git add :		本地文件——>暂存区
  7.    git commit：		暂存区——>本地仓库		（本地分支，默认master分支）
  8.    git push:		本地仓库——>远程仓库     	（本地分支——>远程分支，仓库可以创建多个分支，默认master）
  9.    git pull:		远程仓库——>本地仓库	（远程分支——>本地分支，）



第一次发布项目（本地-远程）：
  1.    git add .   			(这里的 . 表示全部文件，也可以输入指定的文件名)
  2.    git commit -m "注释内容"
  3.    git push -u origin master 		(推送到远程仓库)
（发布需要三大步）


第一次下载项目（远程-本地）：
  1.    git clone 跟上需要下载的项目唯一标识与关联的标识相同
（下载只需要一步）


后续更新提交内容（本地-远程）：
  1.    git add .
  2.    git commit -m "注释内容"
  3.    git push origin master 		（这里更新只是没有-u）


后续远程更新到本地（远程-本地）：
  1.    git pull			（只要是.git项目直接输入这条命令就可以从远程更新到本地）









